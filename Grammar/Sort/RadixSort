#include <iostream>
#include <queue> 

using namespace std;

#define BUCKET_NUM 10

void RadixSort(int arr[], int num, int maxLen)
{
    // maxLen is the length of the biggest data in the array
    std::queue <int> buckets[BUCKET_NUM];
    int bi, pos, di, divfac(1), radix;

    // Repeat maxLen times
    for (pos = 0; pos < maxLen; pos++)
    {
        // Repeat as much as the number of objects
        for (di = 0; di < num; ++di)
        {
            radix = (arr[di] / divfac) % 10;

            buckets[radix].push(arr[di]);
        }

        for (bi = 0, di = 0; bi < BUCKET_NUM; bi++)
        {
            while (!buckets[bi].empty())
            {
                arr[di++] = buckets[bi].front();
                buckets[bi].pop();
            }
        }
        // Increase dividened factor
        divfac *= 10;
    }
}

int main()
{
    int arr[8]{ 13, 212, 14, 7141, 10987, 6, 15, 13 };

    int len = sizeof(arr) / sizeof(int);

    RadixSort(arr, len, 5);

    for (int i : arr)
        std::cout << i << " ";
    std::cout << std::endl;
}
